{"ast":null,"code":"var _jsxFileName = \"/Users/ethanling/dev/ideations/reducer-typing-test/client/src/components/Letter.js\";\nimport React, { useContext } from \"react\";\nimport styled from \"styled-components\";\nimport { StateContext } from \"../context/StateProvider\";\nimport { StyledTestText } from \"../styles/StyledTest\";\nconst StyledLetter = styled.span`\n    white-space: pre-wrap;\n    line-height: 2em;\n    /* font-weight: bold; */\n    animation: ;\n\n    @keyframes blink {\n        50% {\n            border-color: #59B1FC;\n        }\n    }\n`;\n\nconst Letter = () => {\n  const [{\n    test,\n    matches,\n    history\n  }] = useContext(StateContext);\n  const testTextArr = test.text.split(\"\");\n\n  const setLetterStyles = index => {\n    const letterStyles = {\n      opacity: \".4\",\n      borderLeft: \"4px solid #fff\",\n      transition: \"opacity .1s\"\n    };\n\n    if (matches[index] && index < matches.length) {\n      letterStyles.color = \"#81c970\";\n      letterStyles.opacity = \"1\";\n      letterStyles.color = \"#423c3c\";\n    } else if (!matches[index] && index < matches.length) {\n      letterStyles.color = \"#e2615f\";\n      letterStyles.opacity = \".8\";\n    } else {\n      letterStyles.backgroundColor = \"\";\n    } // Determines cursor position\n\n\n    if (history.length === index) {\n      letterStyles.borderLeftWidth = \"4px\";\n      letterStyles.borderLeftStyle = \"solid\";\n      letterStyles.animation = \"blink .5s step-end infinite alternate\";\n    }\n\n    return letterStyles;\n  };\n\n  return React.createElement(StyledTestText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, testTextArr.map((letter, i) => React.createElement(StyledLetter, {\n    key: i,\n    style: setLetterStyles(i),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, letter)));\n};\n\nexport default Letter;","map":{"version":3,"sources":["/Users/ethanling/dev/ideations/reducer-typing-test/client/src/components/Letter.js"],"names":["React","useContext","styled","StateContext","StyledTestText","StyledLetter","span","Letter","test","matches","history","testTextArr","text","split","setLetterStyles","index","letterStyles","opacity","borderLeft","transition","length","color","backgroundColor","borderLeftWidth","borderLeftStyle","animation","map","letter","i"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,YAAT,QAA6B,0BAA7B;AACA,SAASC,cAAT,QAA+B,sBAA/B;AAEA,MAAMC,YAAY,GAAGH,MAAM,CAACI,IAAK;;;;;;;;;;;CAAjC;;AAaA,MAAMC,MAAM,GAAG,MAAM;AACjB,QAAM,CAAC;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,GAAD,IAA+BT,UAAU,CAACE,YAAD,CAA/C;AAEA,QAAMQ,WAAW,GAAGH,IAAI,CAACI,IAAL,CAAUC,KAAV,CAAgB,EAAhB,CAApB;;AAEA,QAAMC,eAAe,GAAIC,KAAD,IAAW;AAC/B,UAAMC,YAAY,GAAG;AACjBC,MAAAA,OAAO,EAAE,IADQ;AAEjBC,MAAAA,UAAU,EAAE,gBAFK;AAGjBC,MAAAA,UAAU,EAAE;AAHK,KAArB;;AAMA,QAAIV,OAAO,CAACM,KAAD,CAAP,IAAkBA,KAAK,GAAGN,OAAO,CAACW,MAAtC,EAA8C;AAC1CJ,MAAAA,YAAY,CAACK,KAAb,GAAqB,SAArB;AACAL,MAAAA,YAAY,CAACC,OAAb,GAAuB,GAAvB;AACAD,MAAAA,YAAY,CAACK,KAAb,GAAqB,SAArB;AACH,KAJD,MAIO,IAAI,CAACZ,OAAO,CAACM,KAAD,CAAR,IAAmBA,KAAK,GAAGN,OAAO,CAACW,MAAvC,EAA+C;AAClDJ,MAAAA,YAAY,CAACK,KAAb,GAAqB,SAArB;AACAL,MAAAA,YAAY,CAACC,OAAb,GAAuB,IAAvB;AACH,KAHM,MAGA;AACHD,MAAAA,YAAY,CAACM,eAAb,GAA+B,EAA/B;AACH,KAhB8B,CAiB/B;;;AACA,QAAIZ,OAAO,CAACU,MAAR,KAAmBL,KAAvB,EAA8B;AAC1BC,MAAAA,YAAY,CAACO,eAAb,GAA+B,KAA/B;AACAP,MAAAA,YAAY,CAACQ,eAAb,GAA+B,OAA/B;AACAR,MAAAA,YAAY,CAACS,SAAb,GAAyB,uCAAzB;AACH;;AAED,WAAOT,YAAP;AACH,GAzBD;;AA2BA,SACI,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKL,WAAW,CAACe,GAAZ,CAAgB,CAACC,MAAD,EAASC,CAAT,KACb,oBAAC,YAAD;AAAc,IAAA,GAAG,EAAEA,CAAnB;AAAsB,IAAA,KAAK,EAAEd,eAAe,CAACc,CAAD,CAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,MADL,CADH,CADL,CADJ;AASH,CAzCD;;AA2CA,eAAepB,MAAf","sourcesContent":["import React, { useContext } from \"react\";\nimport styled from \"styled-components\";\nimport { StateContext } from \"../context/StateProvider\";\nimport { StyledTestText } from \"../styles/StyledTest\";\n\nconst StyledLetter = styled.span`\n    white-space: pre-wrap;\n    line-height: 2em;\n    /* font-weight: bold; */\n    animation: ;\n\n    @keyframes blink {\n        50% {\n            border-color: #59B1FC;\n        }\n    }\n`;\n\nconst Letter = () => {\n    const [{ test, matches, history }] = useContext(StateContext);\n\n    const testTextArr = test.text.split(\"\");\n\n    const setLetterStyles = (index) => {\n        const letterStyles = {\n            opacity: \".4\",\n            borderLeft: \"4px solid #fff\",\n            transition: \"opacity .1s\",\n        };\n\n        if (matches[index] && index < matches.length) {\n            letterStyles.color = \"#81c970\";\n            letterStyles.opacity = \"1\";\n            letterStyles.color = \"#423c3c\";\n        } else if (!matches[index] && index < matches.length) {\n            letterStyles.color = \"#e2615f\";\n            letterStyles.opacity = \".8\";\n        } else {\n            letterStyles.backgroundColor = \"\";\n        }\n        // Determines cursor position\n        if (history.length === index) {\n            letterStyles.borderLeftWidth = \"4px\";\n            letterStyles.borderLeftStyle = \"solid\"\n            letterStyles.animation = \"blink .5s step-end infinite alternate\";\n        }\n\n        return letterStyles;\n    };\n\n    return (\n        <StyledTestText>\n            {testTextArr.map((letter, i) => (\n                <StyledLetter key={i} style={setLetterStyles(i)}>\n                    {letter}\n                </StyledLetter>\n            ))}\n        </StyledTestText>\n    );\n};\n\nexport default Letter;\n"]},"metadata":{},"sourceType":"module"}